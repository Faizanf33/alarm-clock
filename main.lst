Microsoft (R) Macro Assembler Version 6.15.8803		    03/05/19 22:26:33
main.asm						     Page 1 - 1


				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C .NOLIST
			      C .LIST
			      C 
				INCLUDE GraphWin.inc
			      C .NOLIST
			      C .LIST
			      C 
				INCLUDE Inputmod.inc
			      C ; This file contains data section,
			      C ; code section, procedures,
			      C ; prototypes, macros, and libraries
			      C ; required for "main.asm" file
			      C 
			      C INCLUDELIB Winmm.lib
			      C 
			      C PlaySound PROTO,
			      C         pszSound:PTR BYTE,
			      C         hmod:DWORD,
			      C         fdwSound:DWORD
			      C 
			      C ;::::::::::::: START OF DATA SECTION ::::::::::::::::
 00000000		      C .data
			      C 	; system time variables
 00000000 0000 0000 0000      C 	sysTime SYSTEMTIME <>
	   0000 0000 0000
	   0000 0000
 00000010 00000000	      C 	consoleHandle DWORD ?
			      C 
 00000014 00000000	      C 	sysHour DWORD ?
 00000018 00000000	      C 	sysMin DWORD ?
			      C 
			      C 	; Strings to display
 0000001C 3A 00		      C 	colonStr BYTE ":",0
 0000001E 53 59 53 54 45      C 	TheTimeIs BYTE "SYSTEM TIME ",0
	   4D 20 54 49 4D
	   45 20 00
			      C 	
 0000002B 53 45 54 20 41      C 	firststr BYTE "SET ALARM(24-hour)", 0
	   4C 41 52 4D 28
	   32 34 2D 68 6F
	   75 72 29 00
 0000003E 45 6E 74 65 72      C 	hrstr BYTE "Enter hour: ", 0
	   20 68 6F 75 72
	   3A 20 00
 0000004B 45 6E 74 65 72      C 	minstr BYTE "Enter minute: ", 0
	   20 6D 69 6E 75
	   74 65 3A 20 00
 0000005A 54 69 6D 65 20      C 	tleftstr BYTE "Time left until alarm: ", 0
	   6C 65 66 74 20
	   75 6E 74 69 6C
	   20 61 6C 61 72
	   6D 3A 20 00
 00000072 49 4E 56 41 4C      C 	invalidstr BYTE "INVALID TIME", 0
	   49 44 20 54 49
	   4D 45 00
			      C 
			      C 	; variables for user inputs
 0000007F 00		      C 	hr BYTE ?
 00000080 00		      C 	mnt BYTE ?
 00000081 00000000	      C         flg dword 0
			      C 
			      C 	; variables for file handling
 00000085		      C   	arr BYTE 1000 DUP(0)
 0000046D 64 61 74 61 2E      C 	filename BYTE "data.txt",0
	   74 78 74 00
 00000476 00000000	      C 	Bytes_Written DWORD ?
 0000047A 00000000	      C   	handle DWORD ?
			      C 
			      C 	; sound variables for alarm sound
 0000047E 00010000	      C 	SND_ALIAS    DWORD 00010000h
 00000482 00040005	      C 	SND_RESOURCE DWORD 00040005h
 00000486 00020000	      C 	SND_FILENAME DWORD 00020000h
			      C 
			      C 	; system path for sound file
			      C 	; change Alarm01 to Alarm02, 03, ..., 10
			      C 	; for different sounds
 0000048A 63 3A 5C 5C 57      C 	file BYTE "c:\\Windows\media\Alarm01.wav", 0
	   69 6E 64 6F 77
	   73 5C 6D 65 64
	   69 61 5C 41 6C
	   61 72 6D 30 31
	   2E 77 61 76 00
			      C 	
			      C 	; variables for popup window
 000004A8 41 6C 61 72 6D      C 	PopupTitle BYTE "Alarm Clock",0
	   20 43 6C 6F 63
	   6B 00
 000004B4 20 20 20 20 20      C 	PopupText  BYTE "     SNOOZE FOR 5 MINUTES", 0
	   53 4E 4F 4F 5A
	   45 20 46 4F 52
	   20 35 20 4D 49
	   4E 55 54 45 53
	   00
 000004CE  57 4D 5F 4C 42     C 	       BYTE "WM_LBUTTONDOWN message",0
	   55 54 54 4F 4E
	   44 4F 57 4E 20
	   6D 65 73 73 61
	   67 65 00
			      C 
			      C ;::::::::::::: END OF DATA SECTION ::::::::::::::::
			      C 
			      C ; MACRO FOR OUTPUT STRING AND INPUT VALUE
			      C GETDATA MACRO string, var
			      C 
			      C 	mov dl, 20
			      C 	mov dh, 5
			      C 	call Gotoxy
			      C 
			      C 	mov edx, offset firststr
			      C 	call writestring
			      C 
			      C 	mov dl, 20
			      C 	mov dh, 6
			      C 	call Gotoxy
			      C 
			      C 	mov edx, offset string
			      C 	call writestring
			      C 
			      C 	call readint
			      C 	mov var, al
			      C ENDM
			      C 
			      C ; Check user input values
			      C CHECK MACRO ho,min,opt
			      C 	mov flg, 0
			      C 	.IF(ho > 23)
			      C 	    add flg, 1
			      C 	.ENDIF
			      C 
			      C 	.IF(min > 59)
			      C 	    add flg, 1
			      C 	.ENDIF
			      C 
			      C 	.IF(ho < 0)
			      C 	    add flg, 1
			      C 	.ENDIF
			      C 
			      C 	.IF(min < 0)
			      C 	    add flg, 1
			      C 	.ENDIF
			      C ENDM
			      C 
			      C ;::::::::::::: START OF CODE SECTION ::::::::::::::::
			      C 
 00000000		      C .code
			      C 
 00000000		      C WELCOMESCR PROC
 00000000  BA 0000046D R      C 	mov edx, offset filename
			      C 	INVOKE CREATEFILE, edx, GENERIC_read, NULL, NULL, open_existing, FILE_ATTRIBUTE_NORMAL, 0
 0000001D  A3 0000047A R      C 	mov handle, eax
 00000022  BA 00000085 R      C 	mov edx, offset arr
 00000027  B9 000003E8	      C 	mov ecx, lengthof arr
 0000002C  A1 0000047A R      C 	mov eax, handle
			      C 	INVOKE READFILE, eax, edx, ecx, Addr Bytes_Written, 0
 00000040  BA 00000085 R      C 	mov edx, OFFSET arr
 00000045  E8 00000000 E      C 	call writestring
			      C 
 0000004A  C3		      C 	ret
 0000004B		      C WELCOMESCR ENDP
			      C 
 0000004B		      C LOCALTIME PROC
 0000004B  33 C0	      C 	xor eax,eax
 0000004D  33 D2	      C 	xor edx,edx
			      C 
 0000004F  B6 03	      C 	mov dh, 3
 00000051  B2 14	      C 	mov dl, 20
 00000053  E8 00000000 E      C 	call Gotoxy
			      C 
			      C 	INVOKE GetLocalTime,ADDR sysTime
 00000062  BA 0000001E R      C 	mov edx,OFFSET TheTimeIs             ; "Local Time Is : "
 00000067  E8 00000000 E      C 	call WriteString
			      C 
			      C 	; Below Code Display the system time (hh:mm:ss).
			      C 
 0000006C  0F B7 05	      C 	movzx eax,sysTime.wHour              ; hours
	   00000008 R
 00000073  A3 00000014 R      C 	mov sysHour, eax
 00000078  E8 00000000 E      C 	call WriteDec
			      C 
 0000007D  BA 0000001C R      C 	mov edx,offset colonStr              ; ":"
 00000082  E8 00000000 E      C 	call WriteString
			      C 
 00000087  0F B7 05	      C 	movzx eax,sysTime.wMinute ; minutes
	   0000000A R
 0000008E  A3 00000018 R      C 	mov sysMin, eax
 00000093  E8 00000000 E      C 	call WriteDec
			      C 
 00000098  BA 0000001C R      C 	mov edx,offset colonStr              ; ":"
 0000009D  E8 00000000 E      C 	call WriteString
			      C 
 000000A2  0F B7 05	      C 	movzx eax,sysTime.wSecond            ; seconds
	   0000000C R
 000000A9  E8 00000000 E      C 	call WriteDec
 000000AE  C3		      C 	ret
 000000AF		      C LOCALTIME ENDP
			      C 
 000000AF		      C INVALID PROC
 000000AF  B6 07	      C 	mov dh, 7
 000000B1  B2 14	      C 	mov dl, 20
 000000B3  E8 00000000 E      C 	call gotoxy
			      C 	
 000000B8  BA 00000072 R      C 	mov edx, offset invalidstr
 000000BD  E8 00000000 E      C 	call writestring
 000000C2  C3		      C 	ret
 000000C3		      C INVALID ENDP
			      C 
 000000C3		      C LEFTTIME proc
 000000C3  33 C0	      C 	xor eax, eax
 000000C5  33 DB	      C 	xor ebx, ebx
 000000C7  33 D2	      C 	xor edx, edx
			      C 
 000000C9  A0 0000007F R      C 	mov al, hr
 000000CE  8A 1D 00000080 R   C 	mov bl, mnt
			      C 
			      C 	.IF (eax < sysHour)
 000000DC  83 C0 17	      C 		add eax, 23
			      C 
			      C 	.ELSEIF (eax == sysHour && ebx < sysMin)
 000000F1  83 C0 17	      C 		add eax, 23
			      C 	
			      C 	.ELSEIF (eax > sysHour)
 000000FE  48		      C 		dec eax
			      C 	
			      C 	.ENDIF
			      C 
			      C 	.IF (ebx < sysMin)
 00000107  83 C3 3C	      C 		add ebx, 60
			      C 
			      C 	.ENDIF
			      C 		
 0000010A  2B 05 00000014 R   C 	sub eax, sysHour
 00000110  2B 1D 00000018 R   C 	sub ebx, sysMin
			      C 
 00000116  B6 07	      C 	mov dh, 7
 00000118  B2 14	      C 	mov dl, 20
 0000011A  E8 00000000 E      C 	call gotoxy
			      C 
 0000011F  BA 0000005A R      C 	mov edx, offset tleftstr
 00000124  E8 00000000 E      C 	call writestring
 00000129  E8 00000000 E      C 	call writedec
 0000012E  B8 00000068	      C 	mov eax, 'h'
 00000133  E8 00000000 E      C 	call writechar
 00000138  8B C3	      C 	mov eax, ebx
 0000013A  E8 00000000 E      C 	call writedec
 0000013F  B8 0000006D	      C 	mov eax, 'm'
 00000144  E8 00000000 E      C 	call writechar
			      C 
 00000149  C3		      C 	ret
 0000014A		      C LEFTTIME ENDP
			      C 
					
 0000014A			.code
 0000014A				main proc
 0000014A  33 C0			xor eax, eax
 0000014C  33 DB			xor ebx, ebx

 0000014E  B8 0000000C			mov  eax,  black +(green + 10)
 00000153  E8 00000000 E		call SetTextColor
					
				        
 00000158  E8 FFFFFEA3		        call WELCOMESCR
				        
 0000015D  B8 00001388		        mov eax, 5000
 00000162  E8 00000000 E	        call delay
 00000167  E8 00000000 E		call clrscr
					
				  	;RETRY:       
				        ;call LOCALTIME
				        
				        ;call crlf

					;GETDATA hrstr, hr
					
					;GETDATA minstr, mnt
					
					;CHECK hr,mnt,bh
					
					; if users enter wrong time
					;.IF(flg > 0)
					;	call INVALID
					;	mov eax, 1500
					;	call delay
					;	call clrscr	
					;	jmp RETRY

					;.ENDIF
					
 0000016C				SNOOZE:
 0000016C  E8 00000000 E		call clrscr
					;call LEFTTIME
					
					.WHILE(ebx > 0)
 00000173  E8 FFFFFED3				call LOCALTIME
 00000178  E8 FFFFFF46				call LEFTTIME
 0000017D  B8 0000012C			        mov eax, 300
 00000182  E8 00000000 E			call delay
					.ENDW
					
 0000018C  B8 00000002			mov eax, green
 00000191  E8 00000000 E		call SetTextColor

 00000196  8B 1D 00000018 R		mov ebx, sysMin
 0000019C  43				inc ebx
					
 0000019D  E8 00000000 E		call clrscr
					;call LOCALTIME

					.WHILE (ebx > sysMin)
						INVOKE PlaySound, OFFSET file, NULL, SND_FILENAME
						
						;call LOCALTIME
					
					.ENDW

					;INVOKE MessageBox, NULL, ADDR PopupText, ADDR PopupTitle, MB_OKCANCEL

					.IF (eax != 1)
						jmp STOP_ALARM
main.asm(71) : error A2006: undefined symbol : STOP_ALARM

					.ENDIF

					.IF (sysMin > 55)
 000001D6  B0 3C				mov al, 60
 000001D8  2A 05 00000080 R			sub al, mnt
 000001DE  A2 00000080 R			mov mnt, al
 000001E3  FE 05 0000007F R			inc hr
					
					.ELSE
 000001EB  80 05 00000080 R			add mnt, 5
	   05

					.ENDIF
					
					;jmp SNOOZE

					;STOP_ALARM:
					
 000001F2  E8 00000000 E		call crlf
					exit
 000001FE			    	main endp


				end main
Microsoft (R) Macro Assembler Version 6.15.8803		    03/05/19 22:26:33
main.asm						     Symbols 2 - 1




Macros:

                N a m e                 Type

CHECK  . . . . . . . . . . . . .	Proc
GETDATA  . . . . . . . . . . . .	Proc


Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000005
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 Byte
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPos  . . . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  maxWinSize . . . . . . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
MSGStruct  . . . . . . . . . . .	 0000001C
  msgWnd . . . . . . . . . . . .	 00000000	 DWord
  msgMessage . . . . . . . . . .	 00000004	 DWord
  msgWparam  . . . . . . . . . .	 00000008	 DWord
  msgLparam  . . . . . . . . . .	 0000000C	 DWord
  msgTime  . . . . . . . . . . .	 00000010	 DWord
  msgPt  . . . . . . . . . . . .	 00000014	 QWord
POINT  . . . . . . . . . . . . .	 00000008
  X  . . . . . . . . . . . . . .	 00000000	 DWord
  Y  . . . . . . . . . . . . . .	 00000004	 DWord
RECT . . . . . . . . . . . . . .	 00000010
  left . . . . . . . . . . . . .	 00000000	 DWord
  top  . . . . . . . . . . . . .	 00000004	 DWord
  right  . . . . . . . . . . . .	 00000008	 DWord
  bottom . . . . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WNDCLASS . . . . . . . . . . . .	 00000028
  style  . . . . . . . . . . . .	 00000000	 DWord
  lpfnWndProc  . . . . . . . . .	 00000004	 DWord
  cbClsExtra . . . . . . . . . .	 00000008	 DWord
  cbWndExtra . . . . . . . . . .	 0000000C	 DWord
  hInstance  . . . . . . . . . .	 00000010	 DWord
  hIcon  . . . . . . . . . . . .	 00000014	 DWord
  hCursor  . . . . . . . . . . .	 00000018	 DWord
  hbrBackground  . . . . . . . .	 0000001C	 DWord
  lpszMenuName . . . . . . . . .	 00000020	 DWord
  lpszClassName  . . . . . . . .	 00000024	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 DWord	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 000004E5 DWord	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000001FE DWord	  Public  'CODE'	


Procedures,  parameters and locals:

                N a m e                 Type     Value    Attr

CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ClrScr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateWindowExA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DefWindowProcA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DispatchMessageA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMessageA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetModuleHandleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetWindowDC  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetWindowRect  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
INVALID  . . . . . . . . . . . .	P Near	 000000AF _TEXT	Length= 00000014 Public STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LEFTTIME . . . . . . . . . . . .	P Near	 000000C3 _TEXT	Length= 00000087 Public STDCALL
LOCALTIME  . . . . . . . . . . .	P Near	 0000004B _TEXT	Length= 00000064 Public STDCALL
LoadCursorA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LoadIconA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PlaySound  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PostQuitMessage  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RegisterClassA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowWindow . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
UpdateWindow . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WELCOMESCR . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 0000004B Public STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 0000014A _TEXT	Length= 000000B4 Public STDCALL
  SNOOZE . . . . . . . . . . . .	L Near	 0000016C _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
Bytes_Written  . . . . . . . . .	DWord	 00000476 _DATA	
COLOR_BACKGROUND . . . . . . . .	Number	 00000002h   
COLOR_WINDOW . . . . . . . . . .	Number	 00000005h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CW_USEDEFAULT  . . . . . . . . .	Number	 -80000000h   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
CreateWindowEx . . . . . . . . .	Text   	 CreateWindowExA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
DefWindowProc  . . . . . . . . .	Text   	 DefWindowProcA
DispatchMessage  . . . . . . . .	Text   	 DispatchMessageA
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetMessage . . . . . . . . . . .	Text   	 GetMessageA
GetModuleHandle  . . . . . . . .	Text   	 GetModuleHandleA
IDC_ARROW  . . . . . . . . . . .	Number	 00007F00h   
IDI_APPLICATION  . . . . . . . .	Number	 00007F00h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
LoadCursor . . . . . . . . . . .	Text   	 LoadCursorA
LoadIcon . . . . . . . . . . . .	Text   	 LoadIconA
MAIN_WINDOW_STYLE  . . . . . . .	Number	 118F0000h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
PopupText  . . . . . . . . . . .	Byte	 000004B4 _DATA	
PopupTitle . . . . . . . . . . .	Byte	 000004A8 _DATA	
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
RegisterClass  . . . . . . . . .	Text   	 RegisterClassA
SND_ALIAS  . . . . . . . . . . .	DWord	 0000047E _DATA	
SND_FILENAME . . . . . . . . . .	DWord	 00000486 _DATA	
SND_RESOURCE . . . . . . . . . .	DWord	 00000482 _DATA	
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SW_SHOW  . . . . . . . . . . . .	Number	 00000005h   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
TheTimeIs  . . . . . . . . . . .	Byte	 0000001E _DATA	
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WM_CLOSE . . . . . . . . . . . .	Number	 00000010h   
WM_CREATE  . . . . . . . . . . .	Number	 00000001h   
WM_LBUTTONDOWN . . . . . . . . .	Number	 00000201h   
WS_BORDER  . . . . . . . . . . .	Number	 00800000h   
WS_CAPTION . . . . . . . . . . .	Number	 00C00000h   
WS_DLGFRAME  . . . . . . . . . .	Number	 00400000h   
WS_MAXIMIZEBOX . . . . . . . . .	Number	 00010000h   
WS_MINIMIZEBOX . . . . . . . . .	Number	 00020000h   
WS_OVERLAPPED  . . . . . . . . .	Number	 00000000h   
WS_SYSMENU . . . . . . . . . . .	Number	 00080000h   
WS_THICKFRAME  . . . . . . . . .	Number	 00040000h   
WS_VISIBLE . . . . . . . . . . .	Number	 10000000h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
arr  . . . . . . . . . . . . . .	Byte	 00000085 _DATA	
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
colonStr . . . . . . . . . . . .	Byte	 0000001C _DATA	
consoleHandle  . . . . . . . . .	DWord	 00000010 _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
filename . . . . . . . . . . . .	Byte	 0000046D _DATA	
file . . . . . . . . . . . . . .	Byte	 0000048A _DATA	
firststr . . . . . . . . . . . .	Byte	 0000002B _DATA	
flg  . . . . . . . . . . . . . .	DWord	 00000081 _DATA	
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
handle . . . . . . . . . . . . .	DWord	 0000047A _DATA	
hrstr  . . . . . . . . . . . . .	Byte	 0000003E _DATA	
hr . . . . . . . . . . . . . . .	Byte	 0000007F _DATA	
invalidstr . . . . . . . . . . .	Byte	 00000072 _DATA	
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
minstr . . . . . . . . . . . . .	Byte	 0000004B _DATA	
mnt  . . . . . . . . . . . . . .	Byte	 00000080 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
sysHour  . . . . . . . . . . . .	DWord	 00000014 _DATA	
sysMin . . . . . . . . . . . . .	DWord	 00000018 _DATA	
sysTime  . . . . . . . . . . . .	SYSTEMTIME  00000000 _DATA	
tleftstr . . . . . . . . . . . .	Byte	 0000005A _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   1 Errors
